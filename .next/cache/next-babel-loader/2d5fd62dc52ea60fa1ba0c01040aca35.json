{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\components\\\\post\\\\PostSmallList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport { LIST_OF_POSTS } from '../../src/schemas/queries';\nimport PostSmall from '../post/PostSmall';\nimport Loading from '../Loading';\n\nconst PostSmallList = props => {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(null); // const postListQuery = useQuery(LIST_OF_POSTS, {\n  //     variables: {id_list: props.posts.map(p => p._id)}\n  // })\n  // const queryConditions = () => {\n  //     const query = postListQuery.data\n  //     const reducer = posts\n  //     if (!query) return null\n  //     if (!query.getListOfPosts) return null\n  //     if (!query.getListOfPosts.length) return query.getListOfPosts\n  //     if (!reducer || !reducer.length || reducer[0]._id !== query.getListOfPosts[0]._id) return query.getListOfPosts\n  //     return null\n  // }\n\n  const postList = queryConditions();\n  useEffect(() => {\n    if (postList) {\n      setPosts(postList);\n    }\n  }, [postList, props.setPostsForUFP, props]);\n  if (!posts) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }\n  });\n\n  if (posts && posts.length > 0) {\n    if (!posts[0].title) {\n      return __jsx(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  const postListReady = posts.map(p => __jsx(PostSmall, {\n    post: p,\n    user: p.user.username,\n    key: `PSL${p.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 42\n    }\n  }));\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, postListReady);\n}; // const mapStateToProps = (state) => {\n// \treturn {\n//         \n// \t}\n// }\n\n\nexport default connect(null)(PostSmallList);","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/components/post/PostSmallList.js"],"names":["React","useState","useEffect","connect","useQuery","LIST_OF_POSTS","PostSmall","Loading","PostSmallList","props","posts","setPosts","postList","queryConditions","setPostsForUFP","length","title","postListReady","map","p","user","username"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,IAAD,CAAlC,CAD6B,CAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMW,QAAQ,GAAGC,eAAe,EAAhC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,QAAJ,EAAc;AACVD,MAAAA,QAAQ,CAACC,QAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACA,QAAD,EAAWH,KAAK,CAACK,cAAjB,EAAiCL,KAAjC,CAJM,CAAT;AAKA,MAAI,CAACC,KAAL,EAAY,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AACZ,MAAIA,KAAK,IAAIA,KAAK,CAACK,MAAN,GAAe,CAA5B,EAA+B;AAC3B,QAAI,CAACL,KAAK,CAAC,CAAD,CAAL,CAASM,KAAd,EAAqB;AACjB,aAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AAED,QAAMC,aAAa,GAAGP,KAAK,CAACQ,GAAN,CAAUC,CAAC,IAAI,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,CAAjB;AAAoB,IAAA,IAAI,EAAEA,CAAC,CAACC,IAAF,CAAOC,QAAjC;AAA2C,IAAA,GAAG,EAAG,MAAKF,CAAC,CAACH,KAAM,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,CAAtB;AAEA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,aADL,CADJ;AAKH,CAnCD,C,CAqCA;AACA;AACA;AACA;AACA;;;AACA,eAAed,OAAO,CAClB,IADkB,CAAP,CAEbK,aAFa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { LIST_OF_POSTS } from '../../src/schemas/queries'\r\nimport PostSmall from '../post/PostSmall'\r\nimport Loading from '../Loading'\r\n\r\nconst PostSmallList = (props) => {\r\n    const [posts, setPosts] = useState(null)\r\n    // const postListQuery = useQuery(LIST_OF_POSTS, {\r\n    //     variables: {id_list: props.posts.map(p => p._id)}\r\n    // })\r\n    // const queryConditions = () => {\r\n    //     const query = postListQuery.data\r\n    //     const reducer = posts\r\n    //     if (!query) return null\r\n    //     if (!query.getListOfPosts) return null\r\n    //     if (!query.getListOfPosts.length) return query.getListOfPosts\r\n    //     if (!reducer || !reducer.length || reducer[0]._id !== query.getListOfPosts[0]._id) return query.getListOfPosts\r\n    //     return null\r\n    // }\r\n      \r\n    const postList = queryConditions()\r\n    useEffect(() => {\r\n        if (postList) {\r\n            setPosts(postList)\r\n        }\r\n    }, [postList, props.setPostsForUFP, props])\r\n    if (!posts) return <Loading />\r\n    if (posts && posts.length > 0) {\r\n        if (!posts[0].title) {\r\n            return <Loading />\r\n        }\r\n    }\r\n\r\n    const postListReady = posts.map(p => <PostSmall post={p} user={p.user.username} key={`PSL${p.title}`} />)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {postListReady}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n//         \r\n// \t}\r\n// }\r\nexport default connect(\r\n    null\r\n)(PostSmallList)"]},"metadata":{},"sourceType":"module"}