{"ast":null,"code":"var _jsxFileName = \"/home/oliver/Documents/projects/UnilousFE/pages/results/[searchQuery].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport resStyle from '../../styles/pages/results.module.css';\nimport Post from '../../components/post/Post';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SEARCH_POSTS } from '../../src/schemas/queries';\nimport { addPosts } from '../../redux/reducers/posts';\nimport Link from 'next/link';\nimport Loading from '../../components/Loading';\nimport { palletteGenerator } from '../../src/functions/functions';\nimport { toggleStretchLayout } from '../../redux/reducers/stretchLayout';\nimport { setEventSearch } from '../../redux/reducers/eventSearch';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport Head from 'next/head';\nconst Results = withRouter(_c = _s(props => {\n  _s();\n\n  if (false) return __jsx(\"h1\", {\n    className: resStyle.test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 47\n    }\n  }, \"rendering\");else {\n    const currentIds = props.posts ? props.posts.map(p => p._id) : [];\n    const {\n      0: scrollAtBottom,\n      1: setScrollAtBottom\n    } = useState(false);\n    const decodedSearch = decodeURIComponent(props.router.query.searchQuery) === 'all' ? '' : decodeURIComponent(props.router.query.searchQuery);\n    const SPQuery = useQuery(SEARCH_POSTS, {\n      variables: {\n        filterString: decodedSearch,\n        postIds: currentIds,\n        eventQuery: props.eventSearch\n      }\n    });\n\n    const moreResults = () => {\n      if (SPQuery.data && SPQuery.data.searchPosts === null) {\n        return false;\n      }\n\n      return true;\n    };\n\n    if (window.innerHeight + window.scrollY > document.body.offsetHeight - 100 && !scrollAtBottom) {\n      setScrollAtBottom(true);\n    }\n\n    if (window.innerHeight + window.scrollY <= document.body.offsetHeight - 100 && scrollAtBottom) {\n      setScrollAtBottom(false);\n    }\n\n    const triggerWhenScroll = () => {\n      if (window.innerHeight + window.scrollY > document.body.offsetHeight - 100 && !scrollAtBottom) {\n        setScrollAtBottom(true);\n      }\n\n      if (window.innerHeight + window.scrollY <= document.body.offsetHeight - 100 && scrollAtBottom) {\n        setScrollAtBottom(false);\n      }\n    };\n\n    window.addEventListener('scroll', triggerWhenScroll, false);\n\n    const postChangeConditions = (query, reducer) => {\n      if (!scrollAtBottom) return false;\n      if (!query) return false;\n      if (!query.searchPosts) return false;\n\n      if (!reducer) {\n        return true;\n      }\n\n      const queryTitles = query.searchPosts.map(i => i.title);\n      const reducerTitles = reducer.map(i => i.title);\n\n      for (const title of queryTitles) {\n        if (!reducerTitles.includes(title)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    const postsSearched = postChangeConditions(SPQuery.data, props.posts) ? SPQuery.data.searchPosts : null;\n    useEffect(() => {\n      if (postsSearched && !props.posts) {\n        props.addPosts(SPQuery.data.searchPosts);\n        setScrollAtBottom(false);\n      }\n\n      if (postsSearched && props.posts) {\n        if (postsSearched.length > 0) {\n          if (!props.posts.map(p => p._id).includes(postsSearched[0]._id)) {\n            props.addPosts(SPQuery.data.searchPosts);\n            setScrollAtBottom(false);\n          }\n        }\n      }\n    }, [SPQuery, props.addPosts, props, postsSearched]);\n\n    if (!props.posts && !SPQuery.data) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        style: {\n          height: '5vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }), __jsx(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    const eventQuery = props.eventSearch;\n\n    const eventKeys = () => {\n      if (eventQuery === 'COVID-19') {\n        return ['covid', 'coronavirus', 'outbreak', 'virus', 'emergency response'];\n      }\n\n      if (eventQuery === '2020 Election') {\n        return ['election', 'democrat', 'republican', 'vote'];\n      }\n\n      return null;\n    };\n\n    const postToShow = post => {\n      if (eventKeys()) {\n        for (const keyWord of eventKeys()) {\n          if (post.description.toLowerCase().includes(keyWord) || post.title.toLowerCase().includes(keyWord)) {\n            if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true;\n          }\n        }\n\n        return false;\n      }\n\n      if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true;\n\n      for (const skill of post.skillNames) {\n        if (decodedSearch.includes(skill)) return true;\n      }\n\n      return false;\n    };\n\n    const postsArray = props.posts ? props.posts.filter(p => postToShow(p)) : [];\n    const postsToShow = postsArray ? postsArray.map(p => __jsx(Post, {\n      stretch: props.stretchLayout,\n      key: `post${p._id}`,\n      post: p,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 63\n      }\n    })) : [];\n    const pallette = palletteGenerator('rgb(40,40,40)').colorPallette;\n    const layoutBtnClass = props.stretchLayout ? resStyle.layoutButtonGrid : resStyle.layoutButtonStretch;\n    const layoutClass = !props.stretchLayout ? resStyle.resultsContentGrid : resStyle.resultsContentStretch;\n    const eventsList = [{\n      name: 'COVID-19',\n      color: 'rgb(237,32,40)',\n      iconB: '/svg/events/virusB.svg',\n      iconW: '/svg/events/virusW.svg',\n      iconC: '/svg/events/virusC.svg'\n    }, {\n      name: '2020 Election',\n      color: 'rgb(255,0,255)',\n      iconB: '/svg/events/usaB.svg',\n      iconW: '/svg/events/usaW.svg',\n      iconC: '/svg/events/usaC.svg'\n    }];\n    const eventsHTML = eventsList.map(e => e.name === props.eventSearch ? __jsx(\"div\", {\n      className: resStyle.eventSelected,\n      onClick: () => props.setEventSearch(null),\n      style: {\n        borderColor: e.color,\n        backgroundColor: e.color\n      },\n      key: `EV${e.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: e.iconW,\n      className: resStyle.eventImage,\n      alt: e.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), __jsx(\"h3\", {\n      className: resStyle.eventText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, e.name)) : __jsx(\"div\", {\n      className: resStyle.event,\n      onClick: () => props.setEventSearch(e.name),\n      style: {\n        borderColor: e.color,\n        color: e.color\n      },\n      key: `EV${e.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: e.iconC,\n      className: resStyle.eventImage,\n      alt: e.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), __jsx(\"h3\", {\n      className: resStyle.eventText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, e.name)));\n    const eventsContainerClass = props.eventSearch ? resStyle.ECActive : null;\n    const showLoading = moreResults() ? __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 45\n      }\n    }) : __jsx(\"h3\", {\n      style: {\n        opacity: '0.8'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 59\n      }\n    }, \"no more posts\");\n    const titlesString = postsArray.map(p => p.title).join(', ');\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"Browse for projects in Unilous\"), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: \"Browse for projects in Unilous\",\n      key: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: `Unilous projects: ${titlesString}.`,\n      key: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }), __jsx(\"meta\", {\n      name: \"twitter:title\",\n      content: \"Browse for projects in Unilous\",\n      key: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: `Unilous projects: ${titlesString}.`,\n      key: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"home-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: resStyle.resultsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, __jsx(Link, {\n      href: \"/PostFormPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      className: `${resStyle.formContainerExpand} standard-hover neutralize-link`,\n      title: \"add post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      className: resStyle.formExpandIcon,\n      src: \"/svg/plusW.svg\",\n      alt: \"team up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }))), __jsx(\"div\", {\n      className: \"navbar-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }), __jsx(\"h2\", {\n      className: resStyle.secondaryTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, \"events\"), __jsx(\"div\", {\n      className: `${resStyle.eventsContainer} ${eventsContainerClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, eventsHTML), __jsx(\"div\", {\n      onClick: () => props.toggleStretchLayout(!props.stretchLayout),\n      className: resStyle.layoutWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: resStyle.layoutContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: `layoutButton ${layoutBtnClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      className: resStyle.layoutBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }), __jsx(\"div\", {\n      className: resStyle.layoutBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }), __jsx(\"div\", {\n      className: resStyle.layoutBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }), __jsx(\"div\", {\n      className: resStyle.layoutBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 37\n      }\n    })))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: `resultsContent ${layoutClass}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, postsToShow), __jsx(\"div\", {\n      style: {\n        position: 'relative',\n        height: '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, showLoading))));\n  }\n}, \"Tr6hAAZ4lOTstbTpwAADi3sQdGQ=\", false, function () {\n  return [useQuery];\n})); // const mapStateToProps = (state) => {\n// \treturn {\n//         posts: state.posts,\n//         search: state.search,\n//         stretchLayout: state.stretchLayout,\n//         eventSearch: state.eventSearch,\n// \t}\n// }\n// export default connect(\n//     mapStateToProps,\n//     { addPosts, toggleStretchLayout, setEventSearch }\n// )(Results)\n\n_c2 = Results;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    stretchLayout: state.stretchLayout,\n    eventSearch: state.eventSearch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPosts: bindActionCreators(addPosts, dispatch),\n    toggleStretchLayout: bindActionCreators(toggleStretchLayout, dispatch),\n    setEventSearch: bindActionCreators(setEventSearch, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Results);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Results$withRouter\");\n$RefreshReg$(_c2, \"Results\");","map":{"version":3,"sources":["/home/oliver/Documents/projects/UnilousFE/pages/results/[searchQuery].js"],"names":["React","useState","useEffect","connect","resStyle","Post","useQuery","SEARCH_POSTS","addPosts","Link","Loading","palletteGenerator","toggleStretchLayout","setEventSearch","bindActionCreators","withRouter","Layout","Head","Results","props","test","currentIds","posts","map","p","_id","scrollAtBottom","setScrollAtBottom","decodedSearch","decodeURIComponent","router","query","searchQuery","SPQuery","variables","filterString","postIds","eventQuery","eventSearch","moreResults","data","searchPosts","window","innerHeight","scrollY","document","body","offsetHeight","triggerWhenScroll","addEventListener","postChangeConditions","reducer","queryTitles","i","title","reducerTitles","includes","postsSearched","length","height","eventKeys","postToShow","post","keyWord","description","toLowerCase","skill","skillNames","postsArray","filter","postsToShow","stretchLayout","pallette","colorPallette","layoutBtnClass","layoutButtonGrid","layoutButtonStretch","layoutClass","resultsContentGrid","resultsContentStretch","eventsList","name","color","iconB","iconW","iconC","eventsHTML","e","eventSelected","borderColor","backgroundColor","eventImage","eventText","event","eventsContainerClass","ECActive","showLoading","opacity","titlesString","join","resultsContainer","formContainerExpand","formExpandIcon","secondaryTitle","eventsContainer","layoutWrapper","layoutContainer","layoutBox","position","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport resStyle from '../../styles/pages/results.module.css'\r\nimport Post from '../../components/post/Post'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { SEARCH_POSTS } from '../../src/schemas/queries'\r\nimport { addPosts } from '../../redux/reducers/posts'\r\nimport Link from 'next/link'\r\nimport Loading from '../../components/Loading'\r\nimport { palletteGenerator } from '../../src/functions/functions'\r\nimport { toggleStretchLayout } from '../../redux/reducers/stretchLayout'\r\nimport { setEventSearch } from '../../redux/reducers/eventSearch'\r\nimport {bindActionCreators} from 'redux'\r\nimport {withRouter} from 'next/router'\r\nimport Layout from '../../components/Layout'\r\nimport Head from 'next/head'\r\n\r\nconst Results = withRouter((props) => {\r\n    if (typeof window === 'undefined') return <h1 className={resStyle.test}>rendering</h1>\r\n    else {\r\n        const currentIds = props.posts ? props.posts.map(p => p._id) : []\r\n        const [scrollAtBottom, setScrollAtBottom] = useState(false)\r\n        const decodedSearch = decodeURIComponent(props.router.query.searchQuery) === 'all' ? '' : decodeURIComponent(props.router.query.searchQuery)\r\n        const SPQuery = useQuery(SEARCH_POSTS, {\r\n            variables: {\r\n                filterString: decodedSearch,\r\n                postIds: currentIds,\r\n                eventQuery: props.eventSearch,\r\n            }\r\n        })\r\n        const moreResults = () => {\r\n            if (SPQuery.data && SPQuery.data.searchPosts === null) {\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n        if ((window.innerHeight + window.scrollY) > (document.body.offsetHeight - 100) && !scrollAtBottom) {\r\n            setScrollAtBottom(true)\r\n        }\r\n        if ((window.innerHeight + window.scrollY) <= (document.body.offsetHeight - 100) && scrollAtBottom) {\r\n            setScrollAtBottom(false)\r\n        }\r\n        const triggerWhenScroll = () => {\r\n            if ((window.innerHeight + window.scrollY) > (document.body.offsetHeight - 100) && !scrollAtBottom) {\r\n                setScrollAtBottom(true)\r\n            }\r\n            if ((window.innerHeight + window.scrollY) <= (document.body.offsetHeight - 100) && scrollAtBottom) {\r\n                setScrollAtBottom(false)\r\n            }\r\n        }\r\n        window.addEventListener('scroll', triggerWhenScroll, false)\r\n\r\n        const postChangeConditions = (query, reducer) => {\r\n            if (!scrollAtBottom) return false\r\n            if (!query) return false\r\n            if (!query.searchPosts) return false\r\n            if (!reducer) {\r\n                return true\r\n            }\r\n            const queryTitles = query.searchPosts.map(i => i.title)\r\n            const reducerTitles = reducer.map(i => i.title)\r\n            for (const title of queryTitles) {\r\n                if (!reducerTitles.includes(title)) {\r\n                    return true\r\n                }\r\n            }\r\n            return false\r\n        }\r\n        const postsSearched = postChangeConditions(SPQuery.data, props.posts) ?\r\n            SPQuery.data.searchPosts : null\r\n        useEffect(() => {\r\n            if (postsSearched && !props.posts) {\r\n                props.addPosts(SPQuery.data.searchPosts)\r\n                setScrollAtBottom(false)\r\n            }\r\n            if (postsSearched && props.posts) {\r\n                if (postsSearched.length > 0) {\r\n                    if (!props.posts.map(p => p._id).includes(postsSearched[0]._id)){\r\n                        props.addPosts(SPQuery.data.searchPosts)\r\n                        setScrollAtBottom(false)\r\n                    }\r\n                }\r\n            }\r\n        }, [SPQuery, props.addPosts, props, postsSearched])\r\n        if (!props.posts && !SPQuery.data) {\r\n            return (\r\n                <div>\r\n                    <div style={{height: '5vh'}}/>\r\n                    <Loading />\r\n                </div>\r\n            )\r\n        }\r\n        const eventQuery = props.eventSearch\r\n        const eventKeys = () => {\r\n            if (eventQuery === 'COVID-19') {\r\n                return ['covid', 'coronavirus', 'outbreak', 'virus', 'emergency response']\r\n            }\r\n            if (eventQuery === '2020 Election') {\r\n                return ['election', 'democrat', 'republican', 'vote']\r\n            }\r\n            return null\r\n        }\r\n        const postToShow = (post) => {\r\n            if (eventKeys()) {\r\n                for (const keyWord of eventKeys()) {\r\n                    if (post.description.toLowerCase().includes(keyWord) || post.title.toLowerCase().includes(keyWord)) {\r\n                        if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true\r\n                    }\r\n                }\r\n                return false\r\n            }\r\n            if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true\r\n            for (const skill of post.skillNames) {\r\n                if (decodedSearch.includes(skill)) return true\r\n            }\r\n            return false\r\n        }\r\n        const postsArray = props.posts ? props.posts.filter(p => postToShow(p)) : []\r\n        const postsToShow = postsArray ?  postsArray.map(p => <Post stretch={props.stretchLayout} key={`post${p._id}`} post={p} />) : []\r\n        const pallette = palletteGenerator('rgb(40,40,40)').colorPallette\r\n        const layoutBtnClass= props.stretchLayout ? resStyle.layoutButtonGrid : resStyle.layoutButtonStretch\r\n        const layoutClass = !props.stretchLayout ? resStyle.resultsContentGrid : resStyle.resultsContentStretch\r\n        \r\n        const eventsList = [\r\n            {name: 'COVID-19', color: 'rgb(237,32,40)', iconB: '/svg/events/virusB.svg', iconW: '/svg/events/virusW.svg', iconC: '/svg/events/virusC.svg'},\r\n            {name: '2020 Election', color: 'rgb(255,0,255)', iconB: '/svg/events/usaB.svg', iconW: '/svg/events/usaW.svg', iconC: '/svg/events/usaC.svg'} \r\n        ]\r\n        const eventsHTML = eventsList.map(e => e.name === props.eventSearch ? \r\n            <div className={resStyle.eventSelected} onClick={() => props.setEventSearch(null)} style={{borderColor: e.color, backgroundColor: e.color}} key={`EV${e.name}`}>\r\n                <img src={e.iconW} className={resStyle.eventImage} alt={e.name} />\r\n                <h3 className={resStyle.eventText}>{e.name}</h3>\r\n            </div>\r\n            :\r\n            <div className={resStyle.event} onClick={() => props.setEventSearch(e.name)} style={{borderColor: e.color, color: e.color}} key={`EV${e.name}`}>\r\n                <img src={e.iconC} className={resStyle.eventImage} alt={e.name} />\r\n                <h3 className={resStyle.eventText}>{e.name}</h3>\r\n            </div>\r\n        )\r\n        const eventsContainerClass = props.eventSearch ? resStyle.ECActive : null\r\n        const showLoading = moreResults() ? <Loading /> : <h3 style={{opacity: '0.8'}}>no more posts</h3>\r\n        const titlesString = postsArray.map(p => p.title).join(', ')\r\n        return (\r\n            <Layout>\r\n                <Head>\r\n                    <title>Browse for projects in Unilous</title>\r\n                    <meta property=\"og:title\" content=\"Browse for projects in Unilous\" key=\"title\" />\r\n                    <meta property=\"og:description\" content={`Unilous projects: ${titlesString}.`} key=\"description\" />\r\n                    <meta name=\"twitter:title\" content=\"Browse for projects in Unilous\" key=\"title\"/>\r\n                    <meta name=\"description\" content={`Unilous projects: ${titlesString}.`} key=\"description\"/>\r\n                </Head>\r\n                <div className=\"home-wrapper\">\r\n                    <div className={resStyle.resultsContainer}>\r\n                        <Link href=\"/PostFormPage\" >\r\n                            <a className={`${resStyle.formContainerExpand} standard-hover neutralize-link`} title=\"add post\">\r\n                                <img className={resStyle.formExpandIcon} src=\"/svg/plusW.svg\" alt=\"team up\" />\r\n                            </a>\r\n                        </Link>\r\n                        <div className=\"navbar-height\"/>\r\n                        <h2 className={resStyle.secondaryTitle}>events</h2>\r\n                        <div className={`${resStyle.eventsContainer} ${eventsContainerClass}`}>\r\n                            {eventsHTML}\r\n                        </div>\r\n                        <div onClick={() => props.toggleStretchLayout(!props.stretchLayout)} className={resStyle.layoutWrapper}>\r\n                            <div className={resStyle.layoutContainer}>\r\n                                <div className={`layoutButton ${layoutBtnClass}`} >\r\n                                    <div className={resStyle.layoutBox}/>\r\n                                    <div className={resStyle.layoutBox}/>\r\n                                    <div className={resStyle.layoutBox}/>\r\n                                    <div className={resStyle.layoutBox}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div />\r\n                        <div className={`resultsContent ${layoutClass}`}>\r\n                            {postsToShow}\r\n                            {/* {props.posts.map(p => <h1>{p.title}</h1>)} */}\r\n                        </div>\r\n                        <div style={{position: 'relative', height: '400px'}}>\r\n                            {showLoading}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n})\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n//         posts: state.posts,\r\n//         search: state.search,\r\n//         stretchLayout: state.stretchLayout,\r\n//         eventSearch: state.eventSearch,\r\n// \t}\r\n// }\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     { addPosts, toggleStretchLayout, setEventSearch }\r\n// )(Results)\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        posts: state.posts,\r\n        stretchLayout: state.stretchLayout,\r\n        eventSearch: state.eventSearch,\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPosts: bindActionCreators(addPosts, dispatch),\r\n        toggleStretchLayout: bindActionCreators(toggleStretchLayout, dispatch),\r\n        setEventSearch: bindActionCreators(setEventSearch, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Results)"]},"metadata":{},"sourceType":"module"}