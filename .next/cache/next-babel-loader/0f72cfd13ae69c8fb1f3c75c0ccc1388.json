{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\test.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react'; // import '../styles/pages/test.css'\n\nimport { connect } from 'react-redux';\nimport Layout from '../components/Layout';\nimport Head from 'next/head';\n\nconst Test = () => {\n  _s();\n\n  let fileInput = React.createRef();\n  const {\n    0: imageURL,\n    1: setImageURL\n  } = useState(\"\"); // const  uploadToImgur = async (file) => {\n  //     var myHeaders = new Headers();\n  //     myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n  //     myHeaders.append(\"Authorization\", \"Client-ID cc972a94b762b77\");\n  //     myHeaders.append(\"Cookie\", \"IMGURSESSION=63135eb5b4a6f2f863d8b11e10684e30; _nc=1\");\n  //     var formdata = new FormData();\n  //     formdata.append(\"image\", file);\n  //     var requestOptions = {\n  //         method: 'POST',\n  //         headers: myHeaders,\n  //         body: formdata,\n  //         credentials: 'omit',\n  //         redirect: 'follow'\n  //     }\n  //     const response = await fetch(\"https://api.imgur.com/3/image\", requestOptions)\n  //     console.log(response)\n  //     setImageURL(URL.createObjectURL(file))\n  // }\n\n  const uploadToImgur = async file => {\n    var xhr = new XMLHttpRequest();\n    xhr.responseType = 'json';\n    xhr.open('POST', 'https://api.imgur.com/3/image');\n    xhr.setRequestHeader('Authorization', \"Client-ID cc972a94b762b77\");\n    xhr.setRequestHeader('Content-Type', 'multipart/form-data;');\n    xhr.onload = await async function () {\n      var response = await xhr.response; // const finalResponse = response.success ? response.data.link : null\n      // return finalResponse\n\n      if (response.success) {\n        var link = response.data.link; // console.log('link: ' + link);\n\n        return link;\n      } else {\n        // console.log('not successful');\n        return null;\n      }\n    };\n    xhr.send(file);\n  };\n\n  const onImageUpload = file => {\n    const response = uploadToImgur(file);\n    setImageURL(response);\n    console.log(response);\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"navbar-height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    className: \"testt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"test\"), __jsx(\"input\", {\n    type: \"file\",\n    ref: fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: () => onImageUpload(fileInput.current.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"set\"), __jsx(\"img\", {\n    src: imageURL,\n    alt: \"hello\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Test, \"e5i4MC2+klptnvry5UiAThG0QK4=\");\n\n_c = Test;\nexport default connect(null)(Test); // cc972a94b762b77\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/test.js"],"names":["React","useState","connect","Layout","Head","Test","fileInput","createRef","imageURL","setImageURL","uploadToImgur","file","xhr","XMLHttpRequest","responseType","open","setRequestHeader","onload","response","success","link","data","send","onImageUpload","console","log","current","files"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,MAAIC,SAAS,GAAGN,KAAK,CAACO,SAAN,EAAhB;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,EAAD,CAAxC,CAFe,CAKf;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;;AAEA,QAAMS,aAAa,GAAG,MAAOC,IAAP,IAAgB;AAClC,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,YAAJ,GAAmB,MAAnB;AACAF,IAAAA,GAAG,CAACG,IAAJ,CAAS,MAAT,EAAiB,+BAAjB;AACAH,IAAAA,GAAG,CAACI,gBAAJ,CAAqB,eAArB,EAAsC,2BAAtC;AACAJ,IAAAA,GAAG,CAACI,gBAAJ,CAAqB,cAArB,EAAqC,sBAArC;AACAJ,IAAAA,GAAG,CAACK,MAAJ,GAAa,MAAM,kBAAiB;AAChC,UAAIC,QAAQ,GAAG,MAAMN,GAAG,CAACM,QAAzB,CADgC,CAEhC;AACA;;AACA,UAAIA,QAAQ,CAACC,OAAb,EAAsB;AACtB,YAAIC,IAAI,GAAGF,QAAQ,CAACG,IAAT,CAAcD,IAAzB,CADsB,CAEtB;;AACA,eAAOA,IAAP;AACC,OAJD,MAKK;AACL;AACA,eAAO,IAAP;AACC;AACJ,KAbD;AAcAR,IAAAA,GAAG,CAACU,IAAJ,CAASX,IAAT;AACH,GArBD;;AAsBA,QAAMY,aAAa,GAAIZ,IAAD,IAAU;AAC5B,UAAMO,QAAQ,GAAGR,aAAa,CAACC,IAAD,CAA9B;AACAF,IAAAA,WAAW,CAACS,QAAD,CAAX;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,GAJD;;AAOA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEZ,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAQ,IAAA,OAAO,EAAE,MAAMiB,aAAa,CAACjB,SAAS,CAACoB,OAAV,CAAkBC,KAAlB,CAAwB,CAAxB,CAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,EAMI;AAAK,IAAA,GAAG,EAAEnB,QAAV;AAAoB,IAAA,GAAG,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH,CApED;;GAAMH,I;;KAAAA,I;AAsEN,eAAeH,OAAO,CAClB,IADkB,CAAP,CAEbG,IAFa,CAAf,C,CAGA","sourcesContent":["import React, {useState} from 'react'\r\n// import '../styles/pages/test.css'\r\nimport { connect } from 'react-redux'\r\nimport Layout from '../components/Layout'\r\nimport Head from 'next/head'\r\n\r\nconst Test = () => {\r\n    let fileInput = React.createRef()\r\n    const [imageURL, setImageURL] = useState(\"\")\r\n\r\n\r\n    // const  uploadToImgur = async (file) => {\r\n    //     var myHeaders = new Headers();\r\n    //     myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    //     myHeaders.append(\"Authorization\", \"Client-ID cc972a94b762b77\");\r\n    //     myHeaders.append(\"Cookie\", \"IMGURSESSION=63135eb5b4a6f2f863d8b11e10684e30; _nc=1\");\r\n        \r\n    //     var formdata = new FormData();\r\n    //     formdata.append(\"image\", file);\r\n        \r\n    //     var requestOptions = {\r\n    //         method: 'POST',\r\n    //         headers: myHeaders,\r\n    //         body: formdata,\r\n    //         credentials: 'omit',\r\n    //         redirect: 'follow'\r\n    //     }\r\n        \r\n    //     const response = await fetch(\"https://api.imgur.com/3/image\", requestOptions)\r\n        \r\n    //     console.log(response)\r\n\r\n    //     setImageURL(URL.createObjectURL(file))\r\n    // }\r\n\r\n    const uploadToImgur = async (file) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.responseType = 'json';\r\n        xhr.open('POST', 'https://api.imgur.com/3/image');\r\n        xhr.setRequestHeader('Authorization', \"Client-ID cc972a94b762b77\");\r\n        xhr.setRequestHeader('Content-Type', 'multipart/form-data;');\r\n        xhr.onload = await async function() {\r\n            var response = await xhr.response;\r\n            // const finalResponse = response.success ? response.data.link : null\r\n            // return finalResponse\r\n            if (response.success) {\r\n            var link = response.data.link;\r\n            // console.log('link: ' + link);\r\n            return link\r\n            }\r\n            else {\r\n            // console.log('not successful');\r\n            return null\r\n            }\r\n        }\r\n        xhr.send(file);\r\n    }\r\n    const onImageUpload = (file) => {\r\n        const response = uploadToImgur(file)\r\n        setImageURL(response)\r\n        console.log(response)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"navbar-height\" />\r\n            <h1 className=\"testt\">test</h1>\r\n            <input type=\"file\" ref={fileInput} />\r\n            <br />\r\n            <button onClick={() => onImageUpload(fileInput.current.files[0])}>set</button>\r\n            <img src={imageURL} alt=\"hello\" />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    null\r\n)(Test)\r\n// cc972a94b762b77"]},"metadata":{},"sourceType":"module"}