{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\test.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport IU from '../styles/imageUpload.module.css';\nimport { connect } from 'react-redux';\nimport Layout from '../components/Layout';\nimport Head from 'next/head';\n\nconst Test = () => {\n  _s();\n\n  let fileInput = React.createRef();\n  const {\n    0: imageURL,\n    1: setImageURL\n  } = useState(\"\");\n\n  const uploadToImgur = file => {\n    const onImageSuccess = link => {\n      setImageURL(link);\n    };\n\n    var xhr = new XMLHttpRequest();\n    xhr.responseType = 'json';\n    xhr.open('POST', 'https://api.imgur.com/3/image');\n    xhr.setRequestHeader('Authorization', \"Client-ID cc972a94b762b77\");\n    xhr.setRequestHeader('Content-Type', 'multipart/form-data;');\n\n    xhr.onload = function () {\n      var response = xhr.response;\n\n      if (response.success) {\n        var link = response.data.link;\n        onImageSuccess(link);\n      } else {\n        alert('please enter an image in .jpg / .png / .gif format.');\n      }\n    };\n\n    xhr.send(file);\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"navbar-height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    className: \"testt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"test\"), __jsx(\"input\", {\n    type: \"file\",\n    ref: fileInput,\n    accept: \".jpg,.png,.gif\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: () => uploadToImgur(fileInput.current.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"set\"), __jsx(\"img\", {\n    src: imageURL,\n    alt: \"hello\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Test, \"e5i4MC2+klptnvry5UiAThG0QK4=\");\n\n_c = Test;\nexport default connect(null)(Test); // cc972a94b762b77\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/test.js"],"names":["React","useState","IU","connect","Layout","Head","Test","fileInput","createRef","imageURL","setImageURL","uploadToImgur","file","onImageSuccess","link","xhr","XMLHttpRequest","responseType","open","setRequestHeader","onload","response","success","data","alert","send","current","files"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,EAAP,MAAe,kCAAf;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,MAAIC,SAAS,GAAGP,KAAK,CAACQ,SAAN,EAAhB;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,aAAa,GAAIC,IAAD,IAAU;AAC5B,UAAMC,cAAc,GAAIC,IAAD,IAAU;AAC7BJ,MAAAA,WAAW,CAACI,IAAD,CAAX;AACH,KAFD;;AAGA,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,YAAJ,GAAmB,MAAnB;AACAF,IAAAA,GAAG,CAACG,IAAJ,CAAS,MAAT,EAAiB,+BAAjB;AACAH,IAAAA,GAAG,CAACI,gBAAJ,CAAqB,eAArB,EAAsC,2BAAtC;AACAJ,IAAAA,GAAG,CAACI,gBAAJ,CAAqB,cAArB,EAAqC,sBAArC;;AACAJ,IAAAA,GAAG,CAACK,MAAJ,GAAa,YAAW;AACpB,UAAIC,QAAQ,GAAGN,GAAG,CAACM,QAAnB;;AACA,UAAIA,QAAQ,CAACC,OAAb,EAAsB;AAClB,YAAIR,IAAI,GAAGO,QAAQ,CAACE,IAAT,CAAcT,IAAzB;AACAD,QAAAA,cAAc,CAACC,IAAD,CAAd;AACH,OAHD,MAIK;AACDU,QAAAA,KAAK,CAAC,qDAAD,CAAL;AACH;AACJ,KATD;;AAUAT,IAAAA,GAAG,CAACU,IAAJ,CAASb,IAAT;AACH,GApBD;;AAsBA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEL,SAAxB;AAAmC,IAAA,MAAM,EAAC,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAQ,IAAA,OAAO,EAAE,MAAMI,aAAa,CAACJ,SAAS,CAACmB,OAAV,CAAkBC,KAAlB,CAAwB,CAAxB,CAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,EAMI;AAAK,IAAA,GAAG,EAAElB,QAAV;AAAoB,IAAA,GAAG,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH,CApCD;;GAAMH,I;;KAAAA,I;AAsCN,eAAeH,OAAO,CAClB,IADkB,CAAP,CAEbG,IAFa,CAAf,C,CAGA","sourcesContent":["import React, {useState} from 'react'\r\nimport IU from '../styles/imageUpload.module.css'\r\nimport { connect } from 'react-redux'\r\nimport Layout from '../components/Layout'\r\nimport Head from 'next/head'\r\n\r\nconst Test = () => {\r\n    let fileInput = React.createRef()\r\n    const [imageURL, setImageURL] = useState(\"\")\r\n\r\n    const uploadToImgur = (file) => {\r\n        const onImageSuccess = (link) => {\r\n            setImageURL(link)\r\n        }\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.responseType = 'json';\r\n        xhr.open('POST', 'https://api.imgur.com/3/image');\r\n        xhr.setRequestHeader('Authorization', \"Client-ID cc972a94b762b77\");\r\n        xhr.setRequestHeader('Content-Type', 'multipart/form-data;');\r\n        xhr.onload = function() {\r\n            var response = xhr.response\r\n            if (response.success) {\r\n                var link = response.data.link;\r\n                onImageSuccess(link)\r\n            }\r\n            else {\r\n                alert('please enter an image in .jpg / .png / .gif format.')\r\n            }\r\n        }\r\n        xhr.send(file);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"navbar-height\" />\r\n            <h1 className=\"testt\">test</h1>\r\n            <input type=\"file\" ref={fileInput} accept=\".jpg,.png,.gif\" />\r\n            <br />\r\n            <button onClick={() => uploadToImgur(fileInput.current.files[0])}>set</button>\r\n            <img src={imageURL} alt=\"hello\" />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    null\r\n)(Test)\r\n// cc972a94b762b77"]},"metadata":{},"sourceType":"module"}