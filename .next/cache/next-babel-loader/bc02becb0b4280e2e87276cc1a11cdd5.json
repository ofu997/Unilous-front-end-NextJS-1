{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\pages\\\\test.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport IU from '../styles/imageUpload.module.css';\nimport { connect } from 'react-redux';\nimport Layout from '../components/Layout';\nimport Head from 'next/head';\nimport UploadImage from '../components/UploadImage';\n\nconst Test = () => {\n  _s();\n\n  // let fileInput = React.createRef()\n  // const [imageURL, setImageURL] = useState(null)\n  // const [imageFile, setImageFile] = useState(null)\n  // const uploadToImgur = (file) => {\n  //     const onImageSuccess = (link) => {\n  //         setImageURL(link)\n  //     }\n  //     var xhr = new XMLHttpRequest();\n  //     xhr.responseType = 'json';\n  //     xhr.open('POST', 'https://api.imgur.com/3/image');\n  //     xhr.setRequestHeader('Authorization', \"Client-ID cc972a94b762b77\");\n  //     xhr.setRequestHeader('Content-Type', 'multipart/form-data;');\n  //     xhr.onload = function() {\n  //         var response = xhr.response\n  //         if (response.success) {\n  //             var link = response.data.link;\n  //             console.log(link)\n  //             onImageSuccess(link)\n  //         }\n  //         else {\n  //             alert('please enter an image in .jpg / .png / .gif format.')\n  //         }\n  //     }\n  //     xhr.send(file);\n  // }\n  // const showImageOrGuide = imageFile ?\n  //     <label for=\"fileInput\" className={IU.imageLabel}>\n  //         <img src={URL.createObjectURL(imageFile)} className={IU.imageInContainer} />\n  //     </label>\n  //     :\n  //     <label for=\"fileInput\" className={IU.imageLabel}>\n  //         <div className={IU.labelItemsContainer}>\n  //             <img src=\"/svg/imageUploadB.svg\" className={IU.imageIcon} />\n  //             <h2>select or drop image</h2>\n  //         </div>\n  //     </label>\n  // const showSetButton = imageFile ? \n  //     <button onClick={() => uploadToImgur(fileInput.current.files[0])} className={IU.submitButton}>set</button> : null\n  const {\n    0: imageURL,\n    1: setImageURL\n  } = useState(null);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"navbar-height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    className: \"testt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"test\"), __jsx(\"div\", {\n    style: {\n      width: '300px',\n      height: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(UploadImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Test, \"WU9njs3CWQKfz/9CkYoPT4QWZs4=\");\n\n_c = Test;\nexport default connect(null)(Test); // cc972a94b762b77\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/pages/test.js"],"names":["React","useState","IU","connect","Layout","Head","UploadImage","Test","imageURL","setImageURL","width","height"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,EAAP,MAAe,kCAAf;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,IAAD,CAAxC;AAGA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAK,IAAA,KAAK,EAAE;AAACS,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AAgBH,CA3DD;;GAAMJ,I;;KAAAA,I;AA6DN,eAAeJ,OAAO,CAClB,IADkB,CAAP,CAEbI,IAFa,CAAf,C,CAGA","sourcesContent":["import React, {useState} from 'react'\r\nimport IU from '../styles/imageUpload.module.css'\r\nimport { connect } from 'react-redux'\r\nimport Layout from '../components/Layout'\r\nimport Head from 'next/head'\r\nimport UploadImage from '../components/UploadImage'\r\n\r\nconst Test = () => {\r\n    // let fileInput = React.createRef()\r\n    // const [imageURL, setImageURL] = useState(null)\r\n    // const [imageFile, setImageFile] = useState(null)\r\n\r\n    // const uploadToImgur = (file) => {\r\n    //     const onImageSuccess = (link) => {\r\n    //         setImageURL(link)\r\n    //     }\r\n    //     var xhr = new XMLHttpRequest();\r\n    //     xhr.responseType = 'json';\r\n    //     xhr.open('POST', 'https://api.imgur.com/3/image');\r\n    //     xhr.setRequestHeader('Authorization', \"Client-ID cc972a94b762b77\");\r\n    //     xhr.setRequestHeader('Content-Type', 'multipart/form-data;');\r\n    //     xhr.onload = function() {\r\n    //         var response = xhr.response\r\n    //         if (response.success) {\r\n    //             var link = response.data.link;\r\n    //             console.log(link)\r\n    //             onImageSuccess(link)\r\n    //         }\r\n    //         else {\r\n    //             alert('please enter an image in .jpg / .png / .gif format.')\r\n    //         }\r\n    //     }\r\n    //     xhr.send(file);\r\n    // }\r\n    // const showImageOrGuide = imageFile ?\r\n    //     <label for=\"fileInput\" className={IU.imageLabel}>\r\n    //         <img src={URL.createObjectURL(imageFile)} className={IU.imageInContainer} />\r\n    //     </label>\r\n    //     :\r\n    //     <label for=\"fileInput\" className={IU.imageLabel}>\r\n    //         <div className={IU.labelItemsContainer}>\r\n    //             <img src=\"/svg/imageUploadB.svg\" className={IU.imageIcon} />\r\n    //             <h2>select or drop image</h2>\r\n    //         </div>\r\n    //     </label>\r\n    // const showSetButton = imageFile ? \r\n    //     <button onClick={() => uploadToImgur(fileInput.current.files[0])} className={IU.submitButton}>set</button> : null\r\n    const [imageURL, setImageURL] = useState(null)\r\n    \r\n    \r\n    return (\r\n        <Layout>\r\n            <div className=\"navbar-height\" />\r\n            <h1 className=\"testt\">test</h1>\r\n            <div style={{width: '300px', height: '300px'}}>\r\n                <UploadImage />\r\n                {/* <div className={IU.imageUploadContainer}>\r\n                    {showImageOrGuide}\r\n                    <input id=\"fileInput\" type=\"file\" ref={fileInput} accept=\".jpg,.png,.gif\" className={IU.imageInput} onChange={() => setImageFile(fileInput.current.files[0])} />\r\n                    {showSetButton}\r\n                </div> */}\r\n                \r\n            </div>\r\n            <br />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    null\r\n)(Test)\r\n// cc972a94b762b77"]},"metadata":{},"sourceType":"module"}