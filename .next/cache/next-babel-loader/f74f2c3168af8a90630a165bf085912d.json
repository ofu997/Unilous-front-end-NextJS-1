{"ast":null,"code":"var _jsxFileName = \"/home/oliver/Documents/projects/UnilousFE/components/user/form/Register.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useMutation } from '@apollo/react-hooks';\nimport { CREATE_USER } from '../../../src/schemas/mutations';\nimport InputHeader from '../../text-field/InputHeader';\nimport { useField, triggerAlert } from '../../../src/functions/functions';\nimport { setAlert, resetAlert } from '../../../redux/reducers/alertNotif';\nimport UR from '../../../styles/user/user.module.css';\n\nconst Register = props => {\n  const username = useField('text');\n  const password = useField('password');\n  const rePassword = useField('password');\n  const email = useField('email');\n  const referenceLink = useField('url');\n\n  const onError = e => {\n    let cleanedMessage = e.message;\n    console.log(referenceLink.fields.value);\n    console.log(e.message);\n    if (cleanedMessage.includes('username')) cleanedMessage = `username$: ${username.fields.value} is already being used`;\n    if (cleanedMessage.includes('referenceLink')) cleanedMessage = `reference link$: ${referenceLink.fields.value} is already being used`;\n    if (cleanedMessage.includes('email')) cleanedMessage = `email$: ${email.fields.value} is already being used`;\n    triggerAlert('warning', cleanedMessage, props.setAlert, props.resetAlert);\n  };\n\n  const [registerMutation] = useMutation(CREATE_USER, {\n    onError\n  });\n\n  const handleSumbit = async e => {\n    e.preventDefault();\n\n    if (password.fields.value !== rePassword.fields.value) {\n      triggerAlert('warning', 'password$: password and re-password did not match', props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    if (!username.fields.value.length || !password.fields.value.length || !rePassword.fields.value.length || !referenceLink.fields.value.length) {\n      triggerAlert('warning', 'all$: all fields must be filled', props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    const result = await registerMutation({\n      variables: {\n        username: username.fields.value,\n        password: password.fields.value,\n        referenceLink: referenceLink.fields.value\n      }\n    });\n\n    if (result) {\n      if (props.changeMenuItem) {\n        props.changeMenuItem(null);\n      }\n\n      username.reset();\n      password.reset();\n      rePassword.reset();\n      email.reset();\n      referenceLink.reset();\n      triggerAlert('success', 'registered$: account successfully created', props.setAlert, props.resetAlert);\n      console.log('registered');\n    }\n  };\n\n  const bgStyle = props.noBG ? {\n    backgroundColor: '#282828'\n  } : null;\n  return __jsx(\"div\", {\n    className: UR.userFormContainer,\n    style: bgStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    className: UR.userForm,\n    onSubmit: e => handleSumbit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(InputHeader, {\n    inputFor: \"SI-username\",\n    info: false,\n    title: \"username\",\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", _extends({\n    className: UR.UFInput\n  }, username.fields, {\n    id: \"SI-username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), __jsx(InputHeader, {\n    inputFor: \"SI-password\",\n    info: false,\n    title: \"password\",\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", _extends({\n    className: UR.UFInput\n  }, password.fields, {\n    id: \"SI-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), __jsx(InputHeader, {\n    inputFor: \"SI-rePassword\",\n    info: false,\n    title: \"re-type password\",\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", _extends({\n    className: UR.UFInput\n  }, rePassword.fields, {\n    id: \"SI-rePassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), __jsx(InputHeader, {\n    inputFor: \"SI-referenceLink\",\n    info: true,\n    title: \"portafolio link\",\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    style: {\n      margin: 0,\n      marginBottom: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"link on your user page used as a resume to demonstrate your ability\"), __jsx(\"p\", {\n    style: {\n      margin: 0,\n      marginBottom: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 65\n    }\n  }, \"always view another users portafolio link before working with them\")), __jsx(\"ul\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"sites recommended: \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 48\n    }\n  }, \"LinkedIn\"), \", \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 75\n    }\n  }, \"Indeed\"), \", \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 100\n    }\n  }, \"GitHub\"), \", or \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 128\n    }\n  }, \"Facebook\")), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"to further ensure your portafolio link is trustworthy, link your Unilous accout from your portafolio link\"))), __jsx(\"input\", _extends({\n    className: UR.UFInput\n  }, referenceLink.fields, {\n    id: \"SI-referenceLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), __jsx(\"button\", {\n    className: UR.UFSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 63\n    }\n  }, \"register\"))));\n}; //const mapStateToProps = (state) => {\n//\treturn {\n//\t}\n//}\n\n\nexport default connect(null, {\n  setAlert,\n  resetAlert\n})(Register);","map":{"version":3,"sources":["/home/oliver/Documents/projects/UnilousFE/components/user/form/Register.js"],"names":["React","connect","useMutation","CREATE_USER","InputHeader","useField","triggerAlert","setAlert","resetAlert","UR","Register","props","username","password","rePassword","email","referenceLink","onError","e","cleanedMessage","message","console","log","fields","value","includes","registerMutation","handleSumbit","preventDefault","length","result","variables","changeMenuItem","reset","bgStyle","noBG","backgroundColor","userFormContainer","userForm","UFInput","margin","marginBottom","UFSubmit"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { CREATE_USER } from '../../../src/schemas/mutations'\r\nimport InputHeader from '../../text-field/InputHeader'\r\nimport { useField, triggerAlert } from '../../../src/functions/functions'\r\nimport { setAlert, resetAlert } from '../../../redux/reducers/alertNotif'\r\nimport UR from '../../../styles/user/user.module.css'\r\n\r\nconst Register = (props) => {\r\n    const username = useField('text')\r\n    const password = useField('password')\r\n    const rePassword = useField('password')\r\n    const email = useField('email')\r\n    const referenceLink = useField('url')\r\n\r\n    const onError = (e) => {\r\n        let cleanedMessage = e.message\r\n        console.log(referenceLink.fields.value)\r\n        console.log(e.message)\r\n        if (cleanedMessage.includes('username')) cleanedMessage = `username$: ${username.fields.value} is already being used`\r\n        if (cleanedMessage.includes('referenceLink')) cleanedMessage = `reference link$: ${referenceLink.fields.value} is already being used`\r\n        if (cleanedMessage.includes('email')) cleanedMessage = `email$: ${email.fields.value} is already being used`\r\n        triggerAlert('warning', cleanedMessage, props.setAlert, props.resetAlert)\r\n    }\r\n\r\n    const [registerMutation] = useMutation(CREATE_USER, { onError })\r\n    \r\n    const handleSumbit = async (e) => {\r\n        e.preventDefault()\r\n        if (password.fields.value !== rePassword.fields.value) {\r\n            triggerAlert('warning', 'password$: password and re-password did not match', props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (!username.fields.value.length || !password.fields.value.length || !rePassword.fields.value.length || !referenceLink.fields.value.length) {\r\n            triggerAlert('warning', 'all$: all fields must be filled', props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        const result = await registerMutation({\r\n            variables: {\r\n                username: username.fields.value,\r\n                password: password.fields.value,\r\n                referenceLink: referenceLink.fields.value,\r\n            }\r\n        })\r\n        \r\n        if (result) {\r\n            if (props.changeMenuItem) {\r\n                props.changeMenuItem(null)\r\n            }\r\n            username.reset()\r\n            password.reset()\r\n            rePassword.reset()\r\n            email.reset()\r\n            referenceLink.reset()\r\n            triggerAlert('success', 'registered$: account successfully created', props.setAlert, props.resetAlert)\r\n            console.log('registered')\r\n        }\r\n    }\r\n\r\n    const bgStyle = props.noBG ? {backgroundColor: '#282828'} : null\r\n\r\n    return (\r\n        <div className={UR.userFormContainer} style={bgStyle}>\r\n            <form className={UR.userForm} onSubmit={(e) => handleSumbit(e)}>\r\n                <InputHeader inputFor=\"SI-username\" info={false} title=\"username\" color=\"dark\" />\r\n                <input className={UR.UFInput} {...username.fields} id=\"SI-username\" />\r\n                <InputHeader inputFor=\"SI-password\" info={false} title=\"password\" color=\"dark\" />\r\n                <input className={UR.UFInput} {...password.fields} id=\"SI-password\" />\r\n                <InputHeader inputFor=\"SI-rePassword\" info={false} title=\"re-type password\" color=\"dark\" />\r\n                <input className={UR.UFInput} {...rePassword.fields} id=\"SI-rePassword\" />\r\n                {/* <InputHeader inputFor=\"SI-email\" info={true} title=\"email\" color=\"dark\" >\r\n                    <ul style={{margin: 0}}>\r\n                        <li>untill further policy changes no emails are sent your way</li>\r\n                        <li>only shown to users who you accept after contacting you directly (not through post)</li>\r\n                    </ul>\r\n                </InputHeader>\r\n                <input className={UR.UFInput} {...email.fields} id=\"SI-email\" /> */}\r\n                <InputHeader inputFor=\"SI-referenceLink\" info={true} title=\"portafolio link\" color=\"dark\" >\r\n                    <p style={{margin: 0, marginBottom: '5px'}}>link on your user page used as a resume to demonstrate your ability</p>\r\n                    <p style={{margin: 0, marginBottom: '5px'}}><strong>always view another users portafolio link before working with them</strong></p>\r\n                    <ul style={{margin: 0}}>\r\n                        <li>sites recommended: <strong>LinkedIn</strong>, <strong>Indeed</strong>, <strong>GitHub</strong>, or <strong>Facebook</strong></li>\r\n                        <li>to further ensure your portafolio link is trustworthy, link your Unilous accout from your portafolio link</li>\r\n                    </ul>\r\n                </InputHeader>\r\n                <input className={UR.UFInput} {...referenceLink.fields} id=\"SI-referenceLink\" />\r\n                <button className={UR.UFSubmit} type=\"submit\"><h3>register</h3></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null,\r\n    { setAlert, resetAlert }\r\n)(Register)"]},"metadata":{},"sourceType":"module"}