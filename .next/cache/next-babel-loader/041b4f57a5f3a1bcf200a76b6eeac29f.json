{"ast":null,"code":"var _jsxFileName = \"/home/oliver/Documents/projects/UnilousFE/components/user/structure/NotLogged.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport UR from '../../../styles/user/user.module.css'; // import userIcon from '../../../static/svg/userW.svg'\n\nimport SignIn from '../form/SignIn';\nimport Register from '../form/Register';\n\nconst NotLogged = props => {\n  _s();\n\n  const {\n    0: userOption,\n    1: setUserOption\n  } = useState(null);\n  const optionStyle = userOption ? userOption === 'sign in' ? {\n    signIn: {\n      backgroundColor: '#484848',\n      color: 'white'\n    },\n    register: null\n  } : {\n    signIn: null,\n    register: {\n      backgroundColor: '#484848',\n      color: 'white'\n    }\n  } : {\n    signIn: null,\n    register: null\n  };\n  const formToShow = userOption ? userOption === 'sign in' ? __jsx(SignIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }) : __jsx(Register, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 26\n    }\n  }) : null;\n\n  const changeOption = changeTo => {\n    if (userOption === changeTo) {\n      setUserOption(null);\n    } else {\n      setUserOption(changeTo);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: `${UR.userContainer} ${UR.NLUserContainer}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    onClick: () => changeOption('sign in'),\n    className: UR.userOptionContainer,\n    style: optionStyle.signIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: UR.userOptions,\n    style: {\n      paddingRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"sign in\")), __jsx(\"div\", {\n    className: UR.userOptionsSplitter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: UR.userIconContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: \"/svg/userW.svg\",\n    className: UR.userIcon,\n    alt: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    onClick: () => changeOption('register'),\n    className: UR.userOptionContainer,\n    style: optionStyle.register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: UR.userOptions,\n    style: {\n      paddingLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"register\")), formToShow);\n}; //const mapStateToProps = (state) => {\n//\treturn {\n//\t}\n//}\n\n\n_s(NotLogged, \"CWcAaVjS7Xcl4O85V3IrFlCsS5I=\");\n\n_c = NotLogged;\nexport default connect(null)(NotLogged);\n\nvar _c;\n\n$RefreshReg$(_c, \"NotLogged\");","map":{"version":3,"sources":["/home/oliver/Documents/projects/UnilousFE/components/user/structure/NotLogged.js"],"names":["React","useState","connect","UR","SignIn","Register","NotLogged","props","userOption","setUserOption","optionStyle","signIn","backgroundColor","color","register","formToShow","changeOption","changeTo","userContainer","NLUserContainer","userOptionContainer","userOptions","paddingRight","userOptionsSplitter","userIconContainer","userIcon","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UR from '../../../styles/user/user.module.css'\r\n// import userIcon from '../../../static/svg/userW.svg'\r\nimport SignIn from '../form/SignIn'\r\nimport Register from '../form/Register'\r\n\r\n\r\nconst NotLogged = (props) => {\r\n    const [userOption, setUserOption] = useState(null)\r\n\r\n    const optionStyle = userOption ? \r\n        userOption === 'sign in' ?\r\n            {signIn: {backgroundColor: '#484848', color: 'white'}, register: null}\r\n            :\r\n            {signIn: null, register: {backgroundColor: '#484848', color: 'white'}}\r\n        : {signIn: null, register: null}\r\n\r\n    const formToShow = userOption ? \r\n        userOption === 'sign in' ?\r\n            <SignIn /> : <Register />\r\n        : null\r\n\r\n    const changeOption = (changeTo) => {\r\n        if (userOption === changeTo) {\r\n            setUserOption(null)\r\n        } else {\r\n            setUserOption(changeTo)\r\n        }\r\n    }\r\n    return (\r\n        <div className={`${UR.userContainer} ${UR.NLUserContainer}`}>\r\n            <div onClick={() => changeOption('sign in')} className={UR.userOptionContainer} style={optionStyle.signIn}>\r\n                <h3 className={UR.userOptions} style={{paddingRight: '10px'}}>sign in</h3>\r\n            </div>\r\n            <div className={UR.userOptionsSplitter}>\r\n                <div className={UR.userIconContainer}>\r\n                    <img src=\"/svg/userW.svg\" className={UR.userIcon} alt=\"user\" />\r\n                </div>\r\n            </div>\r\n            <div onClick={() => changeOption('register')} className={UR.userOptionContainer} style={optionStyle.register}>\r\n                <h3 className={UR.userOptions} style={{paddingLeft: '10px'}}>register</h3>\r\n            </div>\r\n            {formToShow}\r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(NotLogged)"]},"metadata":{},"sourceType":"module"}