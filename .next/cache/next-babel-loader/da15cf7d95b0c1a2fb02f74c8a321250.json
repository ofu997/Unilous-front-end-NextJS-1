{"ast":null,"code":"var _jsxFileName = \"/home/oliver/Documents/projects/UnilousFE/components/user/utilities/Notif.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useMutation } from '@apollo/react-hooks';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { resetAlert, setAlert } from '../../../redux/reducers/alertNotif';\nimport { setCurrentUserNotifications } from '../../../redux/reducers/currentUser';\nimport { triggerAlert, useField } from '../../../src/functions/functions';\nimport { ACCEPT_NOTIFICATION, ANSWER_QUESTION, DECLINE_NOTIFICATION } from '../../../src/schemas/mutations';\n\nconst Notif = props => {\n  _s();\n\n  const handleError = e => {\n    console.log(e);\n  };\n\n  const [acceptNotif] = useMutation(ACCEPT_NOTIFICATION, {\n    onError: handleError\n  });\n  const [declineNotif] = useMutation(DECLINE_NOTIFICATION, {\n    onError: handleError\n  });\n  const [answerQuestion] = useMutation(ANSWER_QUESTION, {\n    onError: handleError\n  });\n  const answer = useField('text');\n\n  const handleAnswer = async () => {\n    const result = await answerQuestion({\n      variables: {\n        notificationId: props.notif._id,\n        response: answer.fields.value\n      }\n    });\n\n    if (result) {\n      const newNotifications = props.currentUser.notifications.map(n => n._id === props.notif._id ? result.data.answerQuestion : n);\n      props.setCurrentUserNotifications(newNotifications);\n      answer.reset();\n      triggerAlert('success', `replied$: you have replied to ${props.notif.userFrom.username}'s question`, props.setAlert, props.resetAlert);\n    }\n  };\n\n  const handleAccept = async () => {\n    const accept = await acceptNotif({\n      variables: {\n        notificationId: props.notif._id\n      }\n    });\n\n    if (accept) {\n      const newNotifications = props.currentUser.notifications.map(n => n._id === props.notif._id ? accept.data.acceptNotification : n);\n      props.setCurrentUserNotifications(newNotifications);\n      triggerAlert('success', `accepted$: you have accepted ${props.notif.userFrom.username} to your team`, props.setAlert, props.resetAlert);\n    }\n  };\n\n  const handleDecline = async () => {\n    const decline = await declineNotif({\n      variables: {\n        notificationId: props.notif._id\n      }\n    });\n\n    if (decline) {\n      const newNotifications = props.currentUser.notifications.map(n => n._id === props.notif._id ? decline.data.declineNotification : n);\n      props.setCurrentUserNotifications(newNotifications);\n      triggerAlert('danger', `declined$: you have declined ${props.notif.userFrom.username}'s request to join`, props.setAlert, props.resetAlert);\n    }\n  }; // const notif = props.notif\n  // const notifStatus = props.notifStatus; \n\n\n  const {\n    notif,\n    notifStatus\n  } = props; // OF \n  // console.log(notif);\n  // console.log(`notif.userFrom.username: ${notif.userFrom.username} currentUser.username: ${props.currentUser.username}`)\n  // console.log(`notif.answer: ${notif.answer}`)\n  // console.log(`notifStatus: ${notifStatus}`)\n  // the last const\n\n  const notifStatusColor = notif.accepted === null ? 'rgb(226,184,59)' : notif.accepted ? notif.post ? 'rgb(52,166,95)' : '#8b8b8b' : 'rgb(254,52,77)';\n  const fromYou = notif.userFrom.username === props.currentUser.username; // console.log('fromyou: ' + fromYou);\n\n  const contentArray = [notif.answer, notif.message, notif.question];\n  const notifObject = {\n    fromYou: fromYou,\n    status: notifStatus,\n    content: contentArray,\n    accepted: notif.accepted\n  };\n  console.log(notifObject);\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"from: \", notifObject.userFrom), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"status: \", notifObject.status), notif.answer ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 28\n    }\n  }, \"Answer: \", notifObject.content) : null, notif.message ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, \"Message: \", notifObject.content) : null, notif.question ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 30\n    }\n  }, \"Question: \", notifObject.content) : null, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, notif.accepted), __jsx(\"div\", {\n    className: \"n-notif-AoD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    onClick: () => handleDecline(),\n    className: \"n-AoD-option n-SH\",\n    style: {\n      backgroundColor: 'rgb(254,52,77)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"decline\"), __jsx(\"h3\", {\n    onClick: () => handleAccept(),\n    className: \"n-AoD-option n-SH\",\n    style: {\n      backgroundColor: 'rgb(52,166,95)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"accept\"))); //     if (notif.userFrom.username === props.currentUser.username){\n  //         if (notif.accepted) {\n  //             if(notif.question) {\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent question</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`} >\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">to:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userTo.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\n  //                         <div className=\"n-notif-content-secondary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\n  //                             <p className=\"n-notif-message\">{notif.question}</p>\n  //                         </div>\n  //                         <div className=\"n-notif-content-primary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>answered</h3>\n  //                             <p className=\"n-notif-message\">{notif.answer}</p>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //             if (notif.post) {\n  //                 const GCLinkStats = websiteStats(notif.post.contactLink)\n  //                 const cleanedLink = notif.post.contactLink.split('/')[2]\n  //                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent join request</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`} >\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">to:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userTo.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} />\n  //                         <div className=\"n-notif-STJ-container\">\n  //                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\n  //                         </div>\n  //                         <div className=\"n-notif-content-secondary\">\n  //                             <p className=\"n-notif-message\">{notif.message}</p>\n  //                         </div>\n  //                         <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>group/contact link</h3>\n  //                         <div className=\"n-button-container\">\n  //                             <a href={notif.post.contactLink} className=\"n-join-link n-SH\" style={{backgroundColor: GCLinkStats.color}}>\n  //                                 <img src={GCLinkStats.icon} className=\"n-JL-icon\" alt={GCLinkStats.title}/>\n  //                                 <h3>{cleanedLink}</h3>\n  //                             </a>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //             else {\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent message</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`} >\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">to:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userTo.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <div className=\"n-notif-content-primary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\n  //                             <p className=\"n-notif-message\">{notif.message}</p>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //         }\n  //         if (notif.accepted === null) {\n  //             if(notif.question) {\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent question</h3>\n  //                         <div className=\"n-notif-user\">\n  //                             <div className=\"NU-label\">to:</div>\n  //                             <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                             <div className=\"NU-username\">{notif.userTo.username}</div>\n  //                         </div>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\n  //                         <div className=\"n-notif-content-primary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\n  //                             <p className=\"n-notif-message\">{notif.question}</p>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //             else {\n  //                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent join request</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`} >\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">to:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userTo.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} />\n  //                         <div className=\"n-notif-STJ-container\">\n  //                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\n  //                         </div>\n  //                         <div className=\"n-notif-content-primary\">\n  //                             <p className=\"n-notif-message\">{notif.message}</p>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //         }\n  //         else {\n  //             if(notif.question) {\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent question</h3>\n  //                         <div className=\"n-notif-user\">\n  //                             <div className=\"NU-label\">to:</div>\n  //                             <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                             <div className=\"NU-username\">{notif.userTo.username}</div>\n  //                         </div>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\n  //                         <div className=\"n-notif-content-primary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\n  //                             <p className=\"n-notif-message\">{notif.question}</p>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //             else {\n  //                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent join request</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`} >\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">to:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userTo.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} />\n  //                         <div className=\"n-notif-STJ-container\">\n  //                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\n  //                         </div>\n  //                         <div className=\"n-notif-content-primary\">\n  //                             <p className=\"n-notif-message\">{notif.message}</p>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //         }\n  //     }\n  //     else {\n  //         if (notif.accepted) {\n  //             if(notif.question) {\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved question</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">from:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\n  //                         <div className=\"n-notif-content-secondary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\n  //                             <p className=\"n-notif-message\">{notif.question}</p>\n  //                         </div>\n  //                         <div className=\"n-notif-content-primary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>answered</h3>\n  //                             <p className=\"n-notif-message\">{notif.answer}</p>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //             if (notif.post) {\n  //                 const GCLinkStats = websiteStats(notif.post.contactLink)\n  //                 const cleanedLink = notif.post.contactLink.split('/')[2]\n  //                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved join request</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">from:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} />\n  //                         <div className=\"n-notif-STJ-container\">\n  //                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\n  //                         </div>\n  //                         <div className=\"n-notif-content-secondary\">\n  //                             <p className=\"n-notif-message\">{notif.message}</p>\n  //                         </div>\n  //                         <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>sent group/contact link</h3>\n  //                         <div className=\"n-button-container\">\n  //                             <a href={notif.post.contactLink} className=\"n-join-link n-SH\" style={{backgroundColor: GCLinkStats.color}}>\n  //                                 <img src={GCLinkStats.icon} className=\"n-JL-icon\" alt={GCLinkStats.title}/>\n  //                                 <h3>{cleanedLink}</h3>\n  //                             </a>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //             else {\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved message</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">from:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <div className=\"n-notif-content-primary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\n  //                             <p className=\"n-notif-message\">{notif.message}</p>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //         }\n  //         if (notif.accepted === null) {\n  //             if(notif.question) {\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved question</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">from:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\n  //                         <div className=\"n-notif-content-secondary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\n  //                             <p className=\"n-notif-message\">{notif.question}</p>\n  //                         </div>\n  //                         <div className=\"n-notif-reply\">\n  //                             <h3 className=\"n-notif-title\">reply</h3>\n  //                             <textarea className=\"n-notif-reply-field\" {...answer.fields} />\n  //                             <div className=\"n-button-container\">\n  //                                 <h3 onClick={() => handleAnswer()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(52,166,95)'}}>answer</h3>\n  //                             </div>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //             else {\n  //                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved join request</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">from:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} />\n  //                         <div className=\"n-notif-STJ-container\">\n  //                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\n  //                         </div>\n  //                         <div className=\"n-notif-content-secondary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\n  //                             <p className=\"n-notif-message\">{notif.message}</p>\n  //                         </div>\n  //                         <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>accept</h3>\n  //                         <div className=\"n-notif-AoD\">\n  //                             <h3 onClick={() => handleDecline()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(254,52,77)'}}>decline</h3>\n  //                             <h3 onClick={() => handleAccept()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(52,166,95)'}}>accept</h3>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //         }\n  //         else {\n  //             if(notif.question) {\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved question</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">from:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\n  //                         <div className=\"n-notif-content-primary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\n  //                             <p className=\"n-notif-message\">{notif.question}</p>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //             else {\n  //                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\n  //                 return (\n  //                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\n  //                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved join request</h3>\n  //                         <Link href=\"/user/[username]\" as={`/user/${notif.userTo.username}`} >\n  //                             <a className=\"n-notif-user neutralize-link\">\n  //                                 <div className=\"NU-label\">to:</div>\n  //                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\n  //                                 <div className=\"NU-username\">{notif.userTo.username}</div>\n  //                             </a>\n  //                         </Link>\n  //                         <PostSmall post={notif.post} user={notif.userTo.username} />\n  //                         <div className=\"n-notif-STJ-container\">\n  //                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\n  //                         </div>\n  //                         <div className=\"n-notif-content-primary\">\n  //                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\n  //                             <p className=\"n-notif-message\">{notif.message}</p>\n  //                         </div>\n  //                     </div>\n  //                 )\n  //             }\n  //         }\n  //     }\n};\n\n_s(Notif, \"xef9LcUe+2WDPUJAKD9z/7uHT8Q=\", false, function () {\n  return [useMutation, useMutation, useMutation, useField];\n});\n\n_c = Notif;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCurrentUserNotifications,\n  setAlert,\n  resetAlert\n})(Notif);\n\nvar _c;\n\n$RefreshReg$(_c, \"Notif\");","map":{"version":3,"sources":["/home/oliver/Documents/projects/UnilousFE/components/user/utilities/Notif.js"],"names":["useMutation","React","connect","resetAlert","setAlert","setCurrentUserNotifications","triggerAlert","useField","ACCEPT_NOTIFICATION","ANSWER_QUESTION","DECLINE_NOTIFICATION","Notif","props","handleError","e","console","log","acceptNotif","onError","declineNotif","answerQuestion","answer","handleAnswer","result","variables","notificationId","notif","_id","response","fields","value","newNotifications","currentUser","notifications","map","n","data","reset","userFrom","username","handleAccept","accept","acceptNotification","handleDecline","decline","declineNotification","notifStatus","notifStatusColor","accepted","post","fromYou","contentArray","message","question","notifObject","status","content","backgroundColor","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/react-hooks'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { resetAlert, setAlert } from '../../../redux/reducers/alertNotif'\r\nimport { setCurrentUserNotifications } from '../../../redux/reducers/currentUser'\r\nimport { triggerAlert, useField } from '../../../src/functions/functions'\r\nimport { ACCEPT_NOTIFICATION, ANSWER_QUESTION, DECLINE_NOTIFICATION } from '../../../src/schemas/mutations'\r\n\r\nconst Notif = (props) => {\r\n    const handleError = (e) => {\r\n        console.log(e)\r\n    }\r\n\r\n    const [acceptNotif] = useMutation(ACCEPT_NOTIFICATION, {\r\n        onError: handleError\r\n    })\r\n    const [declineNotif] = useMutation(DECLINE_NOTIFICATION, {\r\n        onError: handleError\r\n    })\r\n    const [answerQuestion] = useMutation(ANSWER_QUESTION, {\r\n        onError: handleError\r\n    })\r\n\r\n    const answer = useField('text')\r\n\r\n    const handleAnswer = async () => {\r\n        const result = await answerQuestion({\r\n            variables: {\r\n                notificationId: props.notif._id,\r\n                response: answer.fields.value\r\n            }\r\n        })\r\n        if (result) {\r\n            const newNotifications = props.currentUser.notifications.map(n => n._id === props.notif._id ? result.data.answerQuestion : n)\r\n            props.setCurrentUserNotifications(newNotifications)\r\n            answer.reset()\r\n            triggerAlert('success', `replied$: you have replied to ${props.notif.userFrom.username}'s question`, props.setAlert, props.resetAlert)\r\n        }\r\n\r\n    }\r\n\r\n    const handleAccept = async () => {\r\n        const accept = await acceptNotif({\r\n            variables: {notificationId: props.notif._id}\r\n        })\r\n        if (accept) {\r\n            const newNotifications = props.currentUser.notifications.map(n => n._id === props.notif._id ? accept.data.acceptNotification : n)\r\n            props.setCurrentUserNotifications(newNotifications)\r\n            triggerAlert('success', `accepted$: you have accepted ${props.notif.userFrom.username} to your team`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n    const handleDecline = async () => {\r\n        const decline = await declineNotif({\r\n            variables: {notificationId: props.notif._id}\r\n        })\r\n\r\n        if (decline) {\r\n            const newNotifications = props.currentUser.notifications.map(n => n._id === props.notif._id ? decline.data.declineNotification : n)\r\n            props.setCurrentUserNotifications(newNotifications)\r\n            triggerAlert('danger', `declined$: you have declined ${props.notif.userFrom.username}'s request to join`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n    \r\n    // const notif = props.notif\r\n    // const notifStatus = props.notifStatus; \r\n\r\n    const { notif, notifStatus } = props; \r\n    // OF \r\n    // console.log(notif);\r\n    // console.log(`notif.userFrom.username: ${notif.userFrom.username} currentUser.username: ${props.currentUser.username}`)\r\n    // console.log(`notif.answer: ${notif.answer}`)\r\n    // console.log(`notifStatus: ${notifStatus}`)\r\n    // the last const\r\n    const notifStatusColor = notif.accepted === null ? \r\n        'rgb(226,184,59)' :\r\n        notif.accepted ?\r\n            notif.post ?\r\n                'rgb(52,166,95)' : '#8b8b8b' \r\n            : 'rgb(254,52,77)'\r\n    const fromYou = notif.userFrom.username === props.currentUser.username; \r\n    // console.log('fromyou: ' + fromYou);\r\n    const contentArray = [notif.answer, notif.message, notif.question] \r\n    const notifObject = {\r\n        fromYou: fromYou, \r\n        status: notifStatus, \r\n        content: contentArray,\r\n        accepted: notif.accepted,\r\n    };            \r\n    console.log(notifObject);\r\n    \r\n    return (\r\n        <>\r\n            <p>from: {notifObject.userFrom}</p>\r\n            <p>status: {notifObject.status}</p>\r\n            {notif.answer? <p>Answer: {notifObject.content}</p> : null}\r\n            {notif.message? <p>Message: {notifObject.content}</p> : null}\r\n            {notif.question? <p>Question: {notifObject.content}</p> : null}\r\n            <p>{notif.accepted}</p>\r\n            <div className=\"n-notif-AoD\">\r\n                <h3 onClick={() => handleDecline()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(254,52,77)'}}>decline</h3>\r\n                <h3 onClick={() => handleAccept()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(52,166,95)'}}>accept</h3>\r\n            </div>\r\n        </>\r\n    )\r\n//     if (notif.userFrom.username === props.currentUser.username){\r\n//         if (notif.accepted) {\r\n//             if(notif.question) {\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent question</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`} >\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">to:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userTo.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n//                         <div className=\"n-notif-content-secondary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n//                             <p className=\"n-notif-message\">{notif.question}</p>\r\n//                         </div>\r\n//                         <div className=\"n-notif-content-primary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>answered</h3>\r\n//                             <p className=\"n-notif-message\">{notif.answer}</p>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//             if (notif.post) {\r\n//                 const GCLinkStats = websiteStats(notif.post.contactLink)\r\n//                 const cleanedLink = notif.post.contactLink.split('/')[2]\r\n//                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent join request</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`} >\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">to:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userTo.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} />\r\n//                         <div className=\"n-notif-STJ-container\">\r\n//                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n//                         </div>\r\n//                         <div className=\"n-notif-content-secondary\">\r\n//                             <p className=\"n-notif-message\">{notif.message}</p>\r\n//                         </div>\r\n//                         <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>group/contact link</h3>\r\n//                         <div className=\"n-button-container\">\r\n//                             <a href={notif.post.contactLink} className=\"n-join-link n-SH\" style={{backgroundColor: GCLinkStats.color}}>\r\n//                                 <img src={GCLinkStats.icon} className=\"n-JL-icon\" alt={GCLinkStats.title}/>\r\n//                                 <h3>{cleanedLink}</h3>\r\n//                             </a>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//             else {\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent message</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`} >\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">to:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userTo.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <div className=\"n-notif-content-primary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\r\n//                             <p className=\"n-notif-message\">{notif.message}</p>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//         }\r\n//         if (notif.accepted === null) {\r\n//             if(notif.question) {\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent question</h3>\r\n//                         <div className=\"n-notif-user\">\r\n//                             <div className=\"NU-label\">to:</div>\r\n//                             <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                             <div className=\"NU-username\">{notif.userTo.username}</div>\r\n//                         </div>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n//                         <div className=\"n-notif-content-primary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n//                             <p className=\"n-notif-message\">{notif.question}</p>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//             else {\r\n//                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent join request</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`} >\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">to:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userTo.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} />\r\n//                         <div className=\"n-notif-STJ-container\">\r\n//                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n//                         </div>\r\n//                         <div className=\"n-notif-content-primary\">\r\n//                             <p className=\"n-notif-message\">{notif.message}</p>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//         }\r\n//         else {\r\n//             if(notif.question) {\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent question</h3>\r\n//                         <div className=\"n-notif-user\">\r\n//                             <div className=\"NU-label\">to:</div>\r\n//                             <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                             <div className=\"NU-username\">{notif.userTo.username}</div>\r\n//                         </div>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n//                         <div className=\"n-notif-content-primary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n//                             <p className=\"n-notif-message\">{notif.question}</p>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//             else {\r\n//                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent join request</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`} >\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">to:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userTo.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} />\r\n//                         <div className=\"n-notif-STJ-container\">\r\n//                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n//                         </div>\r\n//                         <div className=\"n-notif-content-primary\">\r\n//                             <p className=\"n-notif-message\">{notif.message}</p>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//         }\r\n//     }\r\n//     else {\r\n//         if (notif.accepted) {\r\n//             if(notif.question) {\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved question</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">from:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n//                         <div className=\"n-notif-content-secondary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n//                             <p className=\"n-notif-message\">{notif.question}</p>\r\n//                         </div>\r\n//                         <div className=\"n-notif-content-primary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>answered</h3>\r\n//                             <p className=\"n-notif-message\">{notif.answer}</p>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//             if (notif.post) {\r\n//                 const GCLinkStats = websiteStats(notif.post.contactLink)\r\n//                 const cleanedLink = notif.post.contactLink.split('/')[2]\r\n//                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved join request</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">from:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} />\r\n//                         <div className=\"n-notif-STJ-container\">\r\n//                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n//                         </div>\r\n//                         <div className=\"n-notif-content-secondary\">\r\n//                             <p className=\"n-notif-message\">{notif.message}</p>\r\n//                         </div>\r\n//                         <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>sent group/contact link</h3>\r\n//                         <div className=\"n-button-container\">\r\n//                             <a href={notif.post.contactLink} className=\"n-join-link n-SH\" style={{backgroundColor: GCLinkStats.color}}>\r\n//                                 <img src={GCLinkStats.icon} className=\"n-JL-icon\" alt={GCLinkStats.title}/>\r\n//                                 <h3>{cleanedLink}</h3>\r\n//                             </a>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//             else {\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved message</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">from:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <div className=\"n-notif-content-primary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\r\n//                             <p className=\"n-notif-message\">{notif.message}</p>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//         }\r\n//         if (notif.accepted === null) {\r\n//             if(notif.question) {\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved question</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">from:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n//                         <div className=\"n-notif-content-secondary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n//                             <p className=\"n-notif-message\">{notif.question}</p>\r\n//                         </div>\r\n//                         <div className=\"n-notif-reply\">\r\n//                             <h3 className=\"n-notif-title\">reply</h3>\r\n//                             <textarea className=\"n-notif-reply-field\" {...answer.fields} />\r\n//                             <div className=\"n-button-container\">\r\n//                                 <h3 onClick={() => handleAnswer()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(52,166,95)'}}>answer</h3>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//             else {\r\n//                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved join request</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">from:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} />\r\n//                         <div className=\"n-notif-STJ-container\">\r\n//                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n//                         </div>\r\n//                         <div className=\"n-notif-content-secondary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\r\n//                             <p className=\"n-notif-message\">{notif.message}</p>\r\n//                         </div>\r\n//                         <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>accept</h3>\r\n//                         <div className=\"n-notif-AoD\">\r\n//                             <h3 onClick={() => handleDecline()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(254,52,77)'}}>decline</h3>\r\n//                             <h3 onClick={() => handleAccept()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(52,166,95)'}}>accept</h3>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//         }\r\n//         else {\r\n//             if(notif.question) {\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved question</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${encodeURIComponent(notif.userTo.username)}`}>\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">from:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userFrom.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n//                         <div className=\"n-notif-content-primary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n//                             <p className=\"n-notif-message\">{notif.question}</p>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//             else {\r\n//                 const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n//                 return (\r\n//                     <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n//                         <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved join request</h3>\r\n//                         <Link href=\"/user/[username]\" as={`/user/${notif.userTo.username}`} >\r\n//                             <a className=\"n-notif-user neutralize-link\">\r\n//                                 <div className=\"NU-label\">to:</div>\r\n//                                 <img src=\"/svg/userB.svg\" className=\"NU-icon\" alt='user' />\r\n//                                 <div className=\"NU-username\">{notif.userTo.username}</div>\r\n//                             </a>\r\n//                         </Link>\r\n//                         <PostSmall post={notif.post} user={notif.userTo.username} />\r\n//                         <div className=\"n-notif-STJ-container\">\r\n//                             <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n//                         </div>\r\n//                         <div className=\"n-notif-content-primary\">\r\n//                             <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\r\n//                             <p className=\"n-notif-message\">{notif.message}</p>\r\n//                         </div>\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//         }\r\n//     }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setCurrentUserNotifications, setAlert, resetAlert }\r\n)(Notif)\r\n"]},"metadata":{},"sourceType":"module"}