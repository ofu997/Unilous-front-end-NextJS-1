{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { withApollo } from \"next-apollo\"; // import ApolloClient, { HttpLink, InMemoryCache } from \"apollo-boost\"\n\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { setContext } from 'apollo-link-context'; // https://unilous-back-end-dev.herokuapp.com/graphql\n// https://projectu-back-end-2020.herokuapp.com/graphql\n// https://unilous-back-end-nextjs.herokuapp.com/graphql\n\nconst httpLink = createHttpLink({\n  uri: 'https://unilous-back-end-nextjs.herokuapp.com/graphql'\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  let token = null;\n\n  if (true) {\n    token = localStorage.getItem('token');\n  }\n\n  return {\n    headers: _objectSpread(_objectSpread({}, headers), {}, {\n      authorization: token ? `Unilous*2000 ${token}` : null\n    })\n  };\n});\nexport const apolloClient = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n}); // const apolloClient = new ApolloClient({\n//   uri: 'https://projectu-back-end-2020.herokuapp.com/graphql',\n//   cache: new InMemoryCache(),\n//   ssrMode: true\n// })\n\nexport default withApollo(apolloClient);","map":{"version":3,"sources":["/home/oliver/Documents/projects/UnilousFE/lib/apollo.js"],"names":["withApollo","ApolloClient","createHttpLink","InMemoryCache","setContext","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","apolloClient","link","concat","cache"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B,C,CACA;;AAEA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAT,QAA2B,qBAA3B,C,CACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC9BI,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGH,UAAU,CAAC,CAACI,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,MAAIC,KAAK,GAAG,IAAZ;;AACA,YAAkC;AAChCA,IAAAA,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AACD;;AACD,SAAO;AACHH,IAAAA,OAAO,kCACAA,OADA;AAEHI,MAAAA,aAAa,EAAEH,KAAK,GAAI,gBAAeA,KAAM,EAAzB,GAA6B;AAF9C;AADJ,GAAP;AAMD,CAX0B,CAA3B;AAaA,OAAO,MAAMI,YAAY,GAAG,IAAIb,YAAJ,CAAiB;AAC3Cc,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADqC;AAE3CY,EAAAA,KAAK,EAAE,IAAId,aAAJ;AAFoC,CAAjB,CAArB,C,CAKP;AACA;AACA;AACA;AACA;;AAEA,eAAeH,UAAU,CAACc,YAAD,CAAzB","sourcesContent":["import { withApollo } from \"next-apollo\"\r\n// import ApolloClient, { HttpLink, InMemoryCache } from \"apollo-boost\"\r\n\r\nimport { ApolloClient } from 'apollo-client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { setContext } from 'apollo-link-context'\r\n// https://unilous-back-end-dev.herokuapp.com/graphql\r\n// https://projectu-back-end-2020.herokuapp.com/graphql\r\n// https://unilous-back-end-nextjs.herokuapp.com/graphql\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'https://unilous-back-end-nextjs.herokuapp.com/graphql',\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  let token = null\r\n  if(typeof window !== 'undefined') {\r\n    token = localStorage.getItem('token')\r\n  }\r\n  return {\r\n      headers: {\r\n          ...headers,\r\n          authorization: token ? `Unilous*2000 ${token}` : null,\r\n      }\r\n  }\r\n})\r\n\r\nexport const apolloClient = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n})\r\n\r\n// const apolloClient = new ApolloClient({\r\n//   uri: 'https://projectu-back-end-2020.herokuapp.com/graphql',\r\n//   cache: new InMemoryCache(),\r\n//   ssrMode: true\r\n// })\r\n\r\nexport default withApollo(apolloClient)\r\n"]},"metadata":{},"sourceType":"module"}