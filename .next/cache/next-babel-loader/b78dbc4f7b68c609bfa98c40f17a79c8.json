{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/oliver/Documents/projects/UnilousFE/components/user/form/SignIn.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN } from '../../../src/schemas/mutations';\nimport { useField, triggerAlert } from '../../../src/functions/functions';\nimport { setToken } from '../../../redux/reducers/token';\nimport InputHeader from '../../text-field/InputHeader';\nimport { setAlert, resetAlert } from '../../../redux/reducers/alertNotif';\nimport UR from '../../../styles/user/user.module.css';\n\nconst SignIn = props => {\n  _s();\n\n  const username = useField('text');\n  const password = useField('password');\n\n  const onError = e => {\n    let cleanedMessage = e.message;\n    console.log(cleanedMessage);\n    cleanedMessage = cleanedMessage.split(':');\n    cleanedMessage = cleanedMessage.slice(1, cleanedMessage.length).join('$:');\n    triggerAlert('warning', cleanedMessage, props.setAlert, props.resetAlert);\n  };\n\n  const [signInMutation] = useMutation(LOGIN, {\n    onError\n  });\n\n  const handleSumbit = async e => {\n    e.preventDefault();\n    const result = await signInMutation({\n      variables: {\n        username: username.fields.value,\n        password: password.fields.value\n      }\n    });\n\n    if (result) {\n      if (props.changeMenuItem) {\n        props.changeMenuItem(null);\n      }\n\n      const token = result.data.login.value;\n      username.reset();\n      password.reset();\n      localStorage.setItem('token', token);\n      localStorage.setItem('username', username.fields.value);\n      props.setToken(token);\n      window.location.reload();\n    }\n  };\n\n  const bgStyle = props.noBG ? {\n    backgroundColor: '#282828'\n  } : null;\n  return __jsx(\"div\", {\n    className: UR.userFormContainer,\n    style: bgStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    className: UR.userForm,\n    onSubmit: e => handleSumbit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(InputHeader, {\n    inputFor: \"SI-username\",\n    info: false,\n    title: \"username\",\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", _extends({\n    className: UR.UFInput\n  }, username.fields, {\n    id: \"SI-username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), __jsx(InputHeader, {\n    inputFor: \"SI-password\",\n    info: false,\n    title: \"password\",\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", _extends({\n    className: UR.UFInput\n  }, password.fields, {\n    id: \"SI-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), __jsx(\"button\", {\n    className: UR.UFSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 63\n    }\n  }, \"sign in\"))));\n}; // const mapStateToProps = (state) => {\n// \treturn {\n// \t}\n// }\n\n\n_s(SignIn, \"DE3f20dFYZoPoYHVPTH5vI3Paek=\", false, function () {\n  return [useField, useField, useMutation];\n});\n\n_c = SignIn;\nexport default connect(null, {\n  setToken,\n  setAlert,\n  resetAlert\n})(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/oliver/Documents/projects/UnilousFE/components/user/form/SignIn.js"],"names":["React","connect","useMutation","LOGIN","useField","triggerAlert","setToken","InputHeader","setAlert","resetAlert","UR","SignIn","props","username","password","onError","e","cleanedMessage","message","console","log","split","slice","length","join","signInMutation","handleSumbit","preventDefault","result","variables","fields","value","changeMenuItem","token","data","login","reset","localStorage","setItem","window","location","reload","bgStyle","noBG","backgroundColor","userFormContainer","userForm","UFInput","UFSubmit"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { LOGIN } from '../../../src/schemas/mutations'\r\nimport { useField, triggerAlert } from '../../../src/functions/functions'\r\nimport { setToken } from '../../../redux/reducers/token'\r\nimport InputHeader from '../../text-field/InputHeader'\r\nimport { setAlert, resetAlert } from '../../../redux/reducers/alertNotif'\r\nimport UR from '../../../styles/user/user.module.css'\r\n\r\nconst SignIn = (props) => {\r\n    const username = useField('text')\r\n    const password = useField('password')\r\n\r\n    const onError = (e) => {\r\n        let cleanedMessage = e.message\r\n        console.log(cleanedMessage)\r\n        cleanedMessage = cleanedMessage.split(':')\r\n        cleanedMessage = cleanedMessage.slice(1, cleanedMessage.length).join('$:')\r\n        triggerAlert('warning', cleanedMessage, props.setAlert, props.resetAlert)\r\n    }\r\n    const [signInMutation] = useMutation(LOGIN, { onError })\r\n    \r\n    const handleSumbit = async (e) => {\r\n        e.preventDefault()\r\n        const result = await signInMutation({\r\n            variables: {\r\n                username: username.fields.value,\r\n                password: password.fields.value\r\n            }\r\n        })\r\n        if (result) {\r\n            if (props.changeMenuItem) {\r\n                props.changeMenuItem(null)\r\n            }\r\n            const token = result.data.login.value\r\n            username.reset()\r\n            password.reset()\r\n            localStorage.setItem('token', token)\r\n            localStorage.setItem('username', username.fields.value)\r\n            props.setToken(token)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    const bgStyle = props.noBG ? {backgroundColor: '#282828'} : null\r\n\r\n    return (\r\n        <div className={UR.userFormContainer} style={bgStyle}>\r\n            <form className={UR.userForm} onSubmit={(e) => handleSumbit(e)}>\r\n                <InputHeader inputFor=\"SI-username\" info={false} title=\"username\" color=\"dark\" />\r\n                <input className={UR.UFInput} {...username.fields} id=\"SI-username\" />\r\n                <InputHeader inputFor=\"SI-password\" info={false} title=\"password\" color=\"dark\" />\r\n                <input className={UR.UFInput} {...password.fields} id=\"SI-password\" />\r\n                <button className={UR.UFSubmit} type=\"submit\"><h3>sign in</h3></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n        \r\n// \t}\r\n// }\r\nexport default connect(\r\n    null,\r\n    { setToken, setAlert, resetAlert }\r\n)(SignIn)"]},"metadata":{},"sourceType":"module"}