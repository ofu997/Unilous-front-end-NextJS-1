{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Projects\\\\projectU\\\\projectu\\\\components\\\\post\\\\PostSmallList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport { LIST_OF_POSTS } from '../../src/schemas/queries';\nimport PostSmall from '../post/PostSmall';\nimport Loading from '../Loading';\nimport { apolloClient } from '../../lib/apollo';\n\nconst PostSmallList = props => {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(null);\n  const postListQuery = useQuery(LIST_OF_POSTS, {\n    variables: {\n      id_list: props.posts.map(p => p._id)\n    }\n  });\n\n  const queryConditions = () => {\n    const query = postListQuery.data;\n    const reducer = posts;\n    if (!query) return null;\n    if (!query.getListOfPosts) return null;\n    if (!query.getListOfPosts.length) return query.getListOfPosts;\n    if (!reducer || !reducer.length || reducer[0]._id !== query.getListOfPosts[0]._id) return query.getListOfPosts;\n    return null;\n  };\n\n  const postList = queryConditions();\n  useEffect(() => {\n    if (postList) {\n      setPosts(postList);\n    }\n  }, [postList, props.setPostsForUFP, props]);\n  if (!posts) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }\n  });\n\n  if (posts && posts.length > 0) {\n    if (!posts[0].title) {\n      return __jsx(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  const postListReady = posts.map(p => __jsx(PostSmall, {\n    post: p,\n    user: p.user.username,\n    key: `PSL${p.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 42\n    }\n  }));\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, postListReady);\n};\n\nPostSmallList.getInitialProps = async context => {\n  const postsQuery = await apolloClient.query;\n  return {};\n}; // const mapStateToProps = (state) => {\n// \treturn {\n//         \n// \t}\n// }\n\n\nexport default connect(null)(PostSmallList);","map":{"version":3,"sources":["C:/Code/Projects/projectU/projectu/components/post/PostSmallList.js"],"names":["React","useState","useEffect","connect","useQuery","LIST_OF_POSTS","PostSmall","Loading","apolloClient","PostSmallList","props","posts","setPosts","postListQuery","variables","id_list","map","p","_id","queryConditions","query","data","reducer","getListOfPosts","length","postList","setPostsForUFP","title","postListReady","user","username","getInitialProps","context","postsQuery"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMY,aAAa,GAAGT,QAAQ,CAACC,aAAD,EAAgB;AAC1CS,IAAAA,SAAS,EAAE;AAACC,MAAAA,OAAO,EAAEL,KAAK,CAACC,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAIA,CAAC,CAACC,GAAvB;AAAV;AAD+B,GAAhB,CAA9B;;AAGA,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMC,KAAK,GAAGP,aAAa,CAACQ,IAA5B;AACA,UAAMC,OAAO,GAAGX,KAAhB;AACA,QAAI,CAACS,KAAL,EAAY,OAAO,IAAP;AACZ,QAAI,CAACA,KAAK,CAACG,cAAX,EAA2B,OAAO,IAAP;AAC3B,QAAI,CAACH,KAAK,CAACG,cAAN,CAAqBC,MAA1B,EAAkC,OAAOJ,KAAK,CAACG,cAAb;AAClC,QAAI,CAACD,OAAD,IAAY,CAACA,OAAO,CAACE,MAArB,IAA+BF,OAAO,CAAC,CAAD,CAAP,CAAWJ,GAAX,KAAmBE,KAAK,CAACG,cAAN,CAAqB,CAArB,EAAwBL,GAA9E,EAAmF,OAAOE,KAAK,CAACG,cAAb;AACnF,WAAO,IAAP;AACH,GARD;;AAUA,QAAME,QAAQ,GAAGN,eAAe,EAAhC;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIuB,QAAJ,EAAc;AACVb,MAAAA,QAAQ,CAACa,QAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACA,QAAD,EAAWf,KAAK,CAACgB,cAAjB,EAAiChB,KAAjC,CAJM,CAAT;AAKA,MAAI,CAACC,KAAL,EAAY,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AACZ,MAAIA,KAAK,IAAIA,KAAK,CAACa,MAAN,GAAe,CAA5B,EAA+B;AAC3B,QAAI,CAACb,KAAK,CAAC,CAAD,CAAL,CAASgB,KAAd,EAAqB;AACjB,aAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AAED,QAAMC,aAAa,GAAGjB,KAAK,CAACK,GAAN,CAAUC,CAAC,IAAI,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,CAAjB;AAAoB,IAAA,IAAI,EAAEA,CAAC,CAACY,IAAF,CAAOC,QAAjC;AAA2C,IAAA,GAAG,EAAG,MAAKb,CAAC,CAACU,KAAM,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,CAAtB;AAEA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,aADL,CADJ;AAKH,CAnCD;;AAqCAnB,aAAa,CAACsB,eAAd,GAAgC,MAAOC,OAAP,IAAmB;AAC/C,QAAMC,UAAU,GAAG,MAAMzB,YAAY,CAACY,KAAtC;AAEA,SAAO,EAAP;AAGH,CAND,C,CAQA;AACA;AACA;AACA;AACA;;;AACA,eAAejB,OAAO,CAClB,IADkB,CAAP,CAEbM,aAFa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { LIST_OF_POSTS } from '../../src/schemas/queries'\r\nimport PostSmall from '../post/PostSmall'\r\nimport Loading from '../Loading'\r\nimport {apolloClient} from '../../lib/apollo'\r\n\r\nconst PostSmallList = (props) => {\r\n    const [posts, setPosts] = useState(null)\r\n    const postListQuery = useQuery(LIST_OF_POSTS, {\r\n        variables: {id_list: props.posts.map(p => p._id)}\r\n    })\r\n    const queryConditions = () => {\r\n        const query = postListQuery.data\r\n        const reducer = posts\r\n        if (!query) return null\r\n        if (!query.getListOfPosts) return null\r\n        if (!query.getListOfPosts.length) return query.getListOfPosts\r\n        if (!reducer || !reducer.length || reducer[0]._id !== query.getListOfPosts[0]._id) return query.getListOfPosts\r\n        return null\r\n    }\r\n      \r\n    const postList = queryConditions()\r\n    useEffect(() => {\r\n        if (postList) {\r\n            setPosts(postList)\r\n        }\r\n    }, [postList, props.setPostsForUFP, props])\r\n    if (!posts) return <Loading />\r\n    if (posts && posts.length > 0) {\r\n        if (!posts[0].title) {\r\n            return <Loading />\r\n        }\r\n    }\r\n\r\n    const postListReady = posts.map(p => <PostSmall post={p} user={p.user.username} key={`PSL${p.title}`} />)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {postListReady}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nPostSmallList.getInitialProps = async (context) => {\r\n    const postsQuery = await apolloClient.query\r\n\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n//         \r\n// \t}\r\n// }\r\nexport default connect(\r\n    null\r\n)(PostSmallList)"]},"metadata":{},"sourceType":"module"}